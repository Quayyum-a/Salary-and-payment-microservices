
{
  "openapi": "3.0.3",
  "info": {
    "title": "Salary & Payment Microservice API",
    "version": "0.1.0",
    "description": "API for managing employees, accepting customer payments (Paystack), and disbursing salaries via Paystack Transfers."
  },
  "servers": [
    { "url": "http://localhost:3000", "description": "Local development" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "phone": { "type": "string" },
          "account_number": { "type": "string" },
          "bank_code": { "type": "string" },
          "salary_amount": { "type": "number", "format": "double" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "email", "account_number", "bank_code", "salary_amount"]
      },
      "EmployeeCreate": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "phone": { "type": "string" },
          "account_number": { "type": "string" },
          "bank_code": { "type": "string" },
          "salary_amount": { "type": "number", "format": "double" }
        },
        "required": ["name", "email", "account_number", "bank_code", "salary_amount"]
      },
      "PaymentInitialize": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "amount": { "type": "number", "format": "double", "description": "Amount in NGN (no kobo conversion performed automatically here)" }
        },
        "required": ["email", "amount"]
      },
      "PaymentInitResponse": {
        "type": "object",
        "properties": {
          "authorization_url": { "type": "string" },
          "reference": { "type": "string" }
        }
      },
      "TransferResult": {
        "type": "object",
        "properties": {
          "transfer_code": { "type": "string" },
          "status": { "type": "string" },
          "recipient": { "type": "string" },
          "amount": { "type": "number" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string" }
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "Service healthy",
            "content": { "application/json": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/employees": {
      "post": {
        "summary": "Create employee profile",
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EmployeeCreate" } } }
        },
        "responses": {
          "201": {
            "description": "Employee created",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Employee" } } }
          },
          "422": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "get": {
        "summary": "List employees",
        "responses": {
          "200": {
            "description": "List of employees",
            "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Employee" } } } }
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "summary": "Get employee details",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": { "description": "Employee", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Employee" } } } },
          "404": { "description": "Not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/payments/initialize": {
      "post": {
        "summary": "Initialize a Paystack transaction",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaymentInitialize" } } } },
        "responses": {
          "200": { "description": "Initialization data", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaymentInitResponse" } } } },
          "422": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "502": { "description": "Upstream error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/payments/verify/{reference}": {
      "get": {
        "summary": "Verify Paystack transaction by reference",
        "parameters": [
          { "name": "reference", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Verification result", "content": { "application/json": { "schema": { "type": "object" } } } },
          "400": { "description": "Bad request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/payments/webhook": {
      "post": {
        "summary": "Handle Paystack webhook (verify signature)",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "object" } } } },
        "responses": {
          "200": { "description": "Acknowledged" },
          "400": { "description": "Invalid signature or payload" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/salary/pay/{employeeId}": {
      "post": {
        "summary": "Pay salary to a single employee",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "employeeId", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": { "description": "Transfer initiated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TransferResult" } } } },
